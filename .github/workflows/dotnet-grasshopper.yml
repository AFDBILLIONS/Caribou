name: Build Grasshopper Plugin

on: [push, pull_request, release]
# Enable below if you want to restrict actions to specific branches
# on:
#   push:
#     branches: [ main, develop, master ]
#   pull_request:
#     branches: [ main, develop, master ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: Caribou    # Replace with your solution name, i.e. MyWpfApp
      Debug_File_Path: '.\Caribou\bin\'
      Release_File_Path: '.\Caribou\release\'

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    # Add NuGet to the PATH: https://github.com/marketplace/actions/setup-nuget-exe-for-use-with-actions
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

    # Restore NuGet packages
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Build the application
    - name: Build the application
      run: msbuild $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    - name: Upload release build of plugin as artefact
      if: ${{ matrix.configuration == 'Release' }} # Only upload gha from a release build
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.Plugin_File_Name }}
        path: ${{ env.Release_File_Path }}/${{ env.Plugin_File_Name }}.gha
